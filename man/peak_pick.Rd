% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pick.R
\name{peak_pick}
\alias{peak_pick}
\title{Pick peaks in datasets interactively}
\usage{
peak_pick(data, x, y, find = "max")
}
\arguments{
\item{x}{Column containing the x-values}

\item{y}{Column containing the y-values}

\item{df}{A tibble containing the data to pick peaks in}

\item{find_nearest}{If TRUE (the default) the gadget will attempt to find the nearest peak when clicking on a point in the dataset. This is disabled by setting this option to FALSE, in which case the point nearest to the click will be selected.}
}
\value{
The original dataset with an additional column "peak", which indicates TRUE/FALSE if the given row is a peak.
}
\description{
`peak_pick()` is an interactive tool (a shinyGadget) for finding peaks in datasets (e.g. a spectrum). After loading the dataset and specifying the columns, you can easily select peaks by clicking on the dataset. The gadget will automatically try to determine the nearest peak to the click and select it. Peaks can be deselected by clicking again.

When you are finished press "Done". The gadget will place a piece of code in your clipboard that you should paste into your script for reproducibility.
}
\examples{
library(tibble)
library(dplyr)
set.seed(123)
df <- tibble(x = seq(0.001, 10, 0.01), y = sin(10*x)^4/(x)) \%>\%
  mutate(y = y + rnorm(n(), mean = 0.01, sd = 0.1))

\dontrun{
peakr::peak_pick(df, x, y)
}

df <- df \%>\% peakr::add_pick(c(14,48,80,112,143))

# After adding peaks, the plot from the gadget can be reproduced using plot_pick()
df \%>\% peakr::plot_pick(x, y)
}
